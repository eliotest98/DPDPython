<CLASS> (id,AdapterPattern)
<CLASS_LIST>
<CLASS> (id,Adaptee)
<FUNCTION_LIST>
<FUNCTION_DECLARATION> (id,specific_request)
<RETURN>str:Adaptee</RETURN></FUNCTION_DECLARATION>
</FUNCTION_LIST>
</CLASS>
<CLASS> (id,Adapter)
<CONSTRUCTOR_DECLARATION>
<FUNCTION_DECLARATION> (id,__init__)
<INSTRUCTION_LIST>
<VARIABLE> (id,self.adaptee)
<ARGUMENT> (<VARIABLE> (id,adaptee)
</VARIABLE>) </ARGUMENT></VARIABLE>
</INSTRUCTION_LIST>
<RETURN>NoneType:None</RETURN></FUNCTION_DECLARATION>
</CONSTRUCTOR_DECLARATION>
<FUNCTION_LIST>
<FUNCTION_DECLARATION> (id,__init__)
<INSTRUCTION_LIST>
<VARIABLE> (id,self.adaptee)
<ARGUMENT> (<VARIABLE> (id,adaptee)
</VARIABLE>) </ARGUMENT></VARIABLE>
</INSTRUCTION_LIST>
<RETURN>NoneType:None</RETURN></FUNCTION_DECLARATION>
<FUNCTION_DECLARATION> (id,request)
<RETURN><CALL_FUNCTION> (id,
self.adaptee.specific_request()</CALL_FUNCTION>
</RETURN></FUNCTION_DECLARATION>
</FUNCTION_LIST>
</CLASS>
</CLASS_LIST>
<INSTRUCTION_LIST>
<VARIABLE> (id,client)
<ARGUMENT> (<CALL_FUNCTION> (id,
Adapter(<CALL_FUNCTION> (id,
Adaptee()</CALL_FUNCTION>)</CALL_FUNCTION>) </ARGUMENT></VARIABLE>
<CALL_FUNCTION> (id,
print(<CALL_FUNCTION> (id,
client.request()</CALL_FUNCTION>)</CALL_FUNCTION>
</INSTRUCTION_LIST>
</CLASS>